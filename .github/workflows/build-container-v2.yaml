name: Build Singularity
on: 
  # Manually run workflow
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag for the built container"
        required: true
        default: "dev"

  # Trigger on push  
  push:

    # This recipe shows how to manually define a matrix of singularity recipes (paths) to build
    # Edit the branches here if you want to change deploy behavior
    branches:
      - main
      - master

  # Trigger on PR
  pull_request: []

  # Trigger on published release
  release:
    types: [published]

# Set path to definition file
env:
  DEF_PATH: Singularity

jobs:
  file-existence:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: File Existence
        uses: andstor/file-existence-action@v1.0.1
        with:
          files: ${{ env.DEF_PATH }}
          allow_failure: true

  generate-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.save-output.outputs.tag }}
    steps:
      - name: Manually Triggered
        if: github.event_name == 'workflow_dispatch'
        run: |
          tag=${{ github.event.inputs.tag }}
          echo "TAG=$tag" >> $GITHUB_ENV

      - name: Triggered by Release
        if: github.event_name == 'release'
        run: |
          tag=${{ github.ref }}
          tag=${tag##*/}
          echo "TAG=$tag" >> $GITHUB_ENV

      - name: Triggered by Push or PR
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        run: |
          tag=dev 
          echo "TAG=$tag" >> $GITHUB_ENV

      - name: Save output
        id: save-output
        run: |
          echo "::set-output name=tag::${{ env.TAG }}"
          echo "Tag is ${{ env.TAG }}"

  build-container:
    needs: file-existence
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Cache Go 
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            build-essential \
            libssl-dev \
            uuid-dev \
            libgpgme11-dev \
            squashfs-tools \
            libseccomp-dev \
            pkg-config

      - name: Install Singularity
        env:
          SINGULARITY_VERSION: 3.8.3
          GOPATH: /tmp/go
        run: |
          mkdir -p $GOPATH
          sudo mkdir -p /usr/local/var/singularity/mnt && \
          mkdir -p $GOPATH/src/github.com/sylabs && \
          cd $GOPATH/src/github.com/sylabs && \
          wget -qO- https://github.com/sylabs/singularity/releases/download/v${SINGULARITY_VERSION}/singularity-ce-${SINGULARITY_VERSION}.tar.gz | \
          tar xzv && \
          cd singularity-ce-${SINGULARITY_VERSION} && \
          ./mconfig -p /usr/local && \
          make -C builddir && \
          sudo make -C builddir install     

      - name: Build Container
        run: |
          sudo -E singularity build container.sif ${{ env.DEF_PATH }}

      - name: Archive built container
        uses: actions/upload-artifact@v2
        with:
          name: container
          path: container.sif
  test-save:
    needs: generate-tag
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{needs.generate-tag.outputs.tag}}

    # name: Check ${{ matrix.recipe }}
    # steps:

    #   - name: Check Out Code for the Container Build
    #     uses: actions/checkout@v2

    #   - name: Continue if Singularity Recipe Exists
    #     run: |
    #       if [[ -f "${{ matrix.recipe }}" ]]; then
    #         echo "keepgoing=true" >> $GITHUB_ENV
    #       fi          

    #   - name: Set up Go 1.13
    #     if: ${{ env.keepgoing == 'true' }}
    #     uses: actions/setup-go@v1
    #     with:
    #       go-version: 1.13
    #     id: go

    #   - name: Install Dependencies
    #     if: ${{ env.keepgoing == 'true' }}
    #     run: |
    #       sudo apt-get update && sudo apt-get install -y \
    #         build-essential \
    #         libssl-dev \
    #         uuid-dev \
    #         libgpgme11-dev \
    #         squashfs-tools \
    #         libseccomp-dev \
    #         pkg-config

    #   - name: Install Singularity
    #     if: ${{ env.keepgoing == 'true' }}
    #     env:
    #       SINGULARITY_VERSION: 3.8.3
    #       GOPATH: /tmp/go
      
    #     run: |
    #       mkdir -p $GOPATH
    #       sudo mkdir -p /usr/local/var/singularity/mnt && \
    #       mkdir -p $GOPATH/src/github.com/sylabs && \
    #       cd $GOPATH/src/github.com/sylabs && \
    #       wget -qO- https://github.com/sylabs/singularity/releases/download/v${SINGULARITY_VERSION}/singularity-ce-${SINGULARITY_VERSION}.tar.gz | \
    #       tar xzv && \
    #       cd singularity-ce-${SINGULARITY_VERSION} && \
    #       ./mconfig -p /usr/local && \
    #       make -C builddir && \
    #       sudo make -C builddir install     

    #   - name: Build Container
    #     if: ${{ env.keepgoing == 'true' }}
    #     env:
    #       recipe: ${{ matrix.recipe }}
    #     run: |
    #      ls 
    #      if [ -f "${{ matrix.recipe }}" ]; then
    #         sudo -E singularity build container.sif ${{ matrix.recipe }}
    #      else
    #        echo "${{ matrix.recipe }} is not found."
    #        echo "Present working directory: $PWD"
    #        ls
    #      fi

    #   - name: Generate Tag
    #     run: |
    #       # If triggered manually, use tag provided by user (or default)
    #       # If triggered by release, tag with release tag
    #       # if triggered otherwise, tag as dev
    #       if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
    #         tag=${{ github.event.inputs.tag }}
    #       elif [[ "${{ github.event_name }}" == "release" ]]; then
    #         tag=${{ github.ref }}
    #         tag=${tag##*/}
    #       else 
    #         tag=dev
    #       fi

    #       # Name the tag
    #       echo "Tag is $tag."
    #       echo "tag=$tag" >> $GITHUB_ENV

    #   - name: Login and Deploy Container
    #     if: (github.event_name != 'pull_request')
    #     env:
    #       keepgoing: ${{ env.keepgoing }}
    #     run: |         
    #         if [[ "${keepgoing}" == "true" ]]; then
    #             echo ${{ secrets.GITHUB_TOKEN }} | singularity remote login -u ${{ secrets.GHCR_USERNAME }} --password-stdin oras://ghcr.io
    #             singularity push container.sif oras://ghcr.io/${GITHUB_REPOSITORY}:${{ env.tag }} 
    #         fi